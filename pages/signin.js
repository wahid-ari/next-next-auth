import Head from "next/head";
import Navbar from "@components/Navbar";
import Input from "@components/Input";
import Button from "@components/Button";
import { useState } from "react";
import { signIn } from 'next-auth/react'
import { useRouter } from "next/router";
import { InformationCircleIcon } from "@heroicons/react/24/outline";
import AlertOutline from "@components/AlertOutline";
import { useSession } from "next-auth/react"
import Router from "next/router";
import Layout from "@components/Layout";

export default function Signin() {
  const { error } = useRouter().query;
  const { status } = useSession();
  
  if(status === 'authenticated') {
    Router.push('/protected')
  }

  const [username, setUsername] = useState("admin");
  const [password, setPassword] = useState("password");

  function handleChange(e) {
    if (e.target.name == "username") {
      setUsername(e.target.value)
    } else {
      setPassword(e.target.value)
    }
  }

  async function handleLogin(e) {
    signIn('credentials',
      {
        // send to api/auth
        username, password,
        // The page where you want to redirect to after a successful login
        callbackUrl: '/protected',
      }
    )
  }

  return (
    <div>
      <Head>
        <title>Sign in Page</title>
        <meta
          name="description"
          content="Generated by create next app"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar />

      <Layout>

        <main className="max-w-7xl mx-auto px-4 sm:px-6 md:px-8 min-h-full">
          <div className="h-32"></div>
          <div className="mx-auto max-w-md rounded shadow p-4">
            {/* {error && <SignInError error={error} />} */}
            {error &&
              <AlertOutline.red className="flex gap-1 items-center font-medium !mb-4" pills>
                <InformationCircleIcon className="h-5 w-5" />Login Failed,
                <span className="font-normal">Check your Username and Password</span>
              </AlertOutline.red>
            }
            <Input
              label="Username"
              placeholder="Username"
              name="username"
              value={username}
              type="text"
              onChange={handleChange}
              required
            />
            <Input
              label="Password"
              placeholder="Password"
              name="password"
              value={password}
              type="password"
              onChange={handleChange}
              required
            />
            <Button onClick={handleLogin} className="w-full"> Login </Button>
          </div>
        </main>

      </Layout>
    </div>
  )
}